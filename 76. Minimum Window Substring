class Solution {
    public String minWindow(String s, String t) {
        HashMap<Character, Integer> hm = new HashMap<>();
        
        for (char c : t.toCharArray()) {
            hm.put(c, hm.getOrDefault(c, 0) + 1);
        }
        
        int i = 0, j = 0;
        int count = t.length();
        int begin = 0;
        int min_len = Integer.MAX_VALUE;

        while (j < s.length()) {
            char curr = s.charAt(j);
            
            if (hm.containsKey(curr)) {
                if (hm.get(curr) > 0) {
                    count--;
                }
                hm.put(curr, hm.get(curr) - 1);
            }

            while (count == 0) {
                int currWinSize = j - i + 1;
                if (min_len > currWinSize) {
                    min_len = currWinSize;
                    begin = i;
                }

                char startChar = s.charAt(i);
                if (hm.containsKey(startChar)) {
                    hm.put(startChar, hm.get(startChar) + 1);
                    if (hm.get(startChar) > 0) {
                        count++;
                    }
                }
                i++;
            }
            j++;
        }
        
        return min_len == Integer.MAX_VALUE ? "" : s.substring(begin, begin + min_len);
    }
}
